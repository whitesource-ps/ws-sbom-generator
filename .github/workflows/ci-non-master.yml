name: WS SBOM report generator - Non Master
on:
  push:
    branches:
      - '**'
      - '!master'
jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8. 3.9]
    steps:
      - uses: actions/checkout@v2
      - uses: UnicornGlobal/trufflehog-actions-scan@master
        with:
          branch: ${{ github.head_ref }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 mock
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --ignore=E501,F841
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Perform integration test and compare to existing report
        env:
          WS_USER_KEY: ${{ secrets.WS_USER_KEY }}
          WS_SCOPE_PROJ: ${{ secrets.WS_SCOPE_PROJ_WEBGOAT_INTEGRATION_TESTS }}
          WS_SCOPE_ORG: ${{ secrets.WS_ORG_TOKEN }}
        run: python -m unittest
      - name: Full test JSON
        run: |
          cd sbom_report
          python sbom_report.py -u ${{ secrets.WS_USER_KEY }} -k ${{ secrets.WS_ORG_TOKEN }} -s ${{ secrets.WS_SCOPE_PROD_JAVA_MAVEN }}
      - name: Full test RDF
        run: |
          cd sbom_report
          python sbom_report.py -u ${{ secrets.WS_USER_KEY }} -k ${{ secrets.WS_ORG_TOKEN }} -s ${{ secrets.WS_SCOPE_PROD_NPM }} -t rdf
      - name: Full test TV (tag-value)
        run: |
          cd sbom_report
          python sbom_report.py -u ${{ secrets.WS_USER_KEY }} -k ${{ secrets.WS_ORG_TOKEN }} -s ${{ secrets.WS_SCOPE_PROD_PYTHON }} -t tv
